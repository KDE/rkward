<!DOCTYPE rkplugin>
<document>
	<code file="level_select.js" />
	<logic>
		<!-- This plugin is meant for embedding only. Provides a <valueselector> holding levels of a variable
			(or other info queried from R).
			External properties:
				- variable: Connect this to the variable to fetch levels for (typically the available-property of a varslot)
				- limit: Optionally adjust max number of levels to fetch. Default is 100.
				- custom_expression: A custom expression to run instead of levels(_X_). The string '_X_' is replaced with the variable name.
		-->
		<external id="variable" default=""/>
		<external id="custom_expression" default=""/>
		<external id="limit" default="100"/>

		<script><![CDATA[
				last_command_id = -1;
				gui.setValue ("limitnote.visible", false);

				gui.addChangeCommand ("variable", "update ()");
				gui.addChangeCommand ("limit", "update ()");
				gui.addChangeCommand ("custom_expression", "update ()");
				update = function () {
					gui.setValue ("selector.available", "");
					gui.setValue ("selector.enabled", 0);

					variable = gui.getValue ("variable");
					if (variable == "") return;

					limit = gui.getValue ("limit");
					custom_expression = gui.getValue ("custom_expression");
					if (custom_expression != "") {
						expression = custom_expression.replace ('_X_', variable);
					} else {
						expression = 'e <- ' + variable + '; if (is.factor (e)) {levels (e)} else {sort (unique (e, nmax=' + limit*limit + '))}';
					}
					code = "local ({\n";
					code += "\tx <- {" + expression + "}\n";
					code += "\tif (length (x) > " + limit + ") x <- c (x[1:" + limit + "], \"____LIMIT____\")\n";
					code += "\tif (is.character (x)) x <- dQuote (x)\n";
					code += "\tx\n";
					code += "})";

					last_command_id = doRCommand (code, "commandFinished");
				}

				commandFinished = function (result, id) {
					if (id != last_command_id) return;  // another result is about to arrive
					if (typeof (result) == "undefined") {
						gui.setListValue ("selector.available", Array ("ERROR"));
						return;
					}
					gui.setValue ("selector.enabled", 1);
					limit = gui.getValue ("limit");
					gui.setValue ("limitnote.visible", result.length > limit ? 1 : 0);
					gui.setListValue ("selector.available", result.slice (0, limit));
				}
		]]></script>
	</logic>
	<dialog label="Level selector">
		<valueselector id="selector" />
		<text id="limitnote" type="warning">
			Note: Some values were cut off.
		</text>
	</dialog>
</document>
 
