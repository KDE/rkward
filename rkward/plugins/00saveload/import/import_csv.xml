<!DOCTYPE rkplugin>
<!--- This file is part of the RKWard project (https://rkward.kde.org).
SPDX-FileCopyrightText: by Thomas Friedrichsmeier <thomas.friedrichsmeier@kdemail.net>
SPDX-FileContributor: The RKWard Team <rkward-devel@kde.org>
SPDX-License-Identifier: GPL-2.0-or-later
-->
<document> 
	<code file="import_csv.js"/>
	<help file="import_csv.rkh"/>
	<logic>
		<script><![CDATA[
			var updating = false;
			// Predefined formats
			var preset_csv   = { header: 1, sep: "','",   dec: "'.'", quote: "'\\\"'",  commentchar: "",  fill: 1 };
			var preset_csv2  = { header: 1, sep: "';'",   dec: "','", quote: "'\\\"'",  commentchar: "",  fill: 1 };
			var preset_tsv   = { header: 1, sep: "'\\t'", dec: "'.'", quote: "'\\\"'",  commentchar: "",  fill: 1 };
			var preset_tsv2  = { header: 1, sep: "'\\t'", dec: "','", quote: "'\\\"'",  commentchar: "",  fill: 1 };
			var preset_table = { header: 0, sep: "",      dec: "'.'", quote: "'\"\\''", commentchar: "#", fill: 0 };

			// Update controls, when a predefined format has been selected
			gui.addChangeCommand ("quick.string", "updateFromPresets ()");
			updateFromPresets = function () {
				if (updating) return;

				var quick = gui.getValue ("quick.string");
				if (quick == "custom") return;

				var preset;
				if (quick == "csv") preset = preset_csv;
				else if (quick == "csv2") preset = preset_csv2;
				else if (quick == "delim") preset = preset_tsv;
				else if (quick == "delim2") preset = preset_tsv2;
				else if (quick == "table") preset = preset_table;

				updating = true;

				gui.setValue ("header.state", preset.header);
				gui.setValue ("sep.string", preset.sep);
				gui.setValue ("dec.string", preset.dec);
				gui.setValue ("quote.string", preset.quote);
				gui.setValue ("commentchar.text", preset.commentchar);
				gui.setValue ("fill.state", preset.fill);

				updating = false;
			}

			// Update "quick" selector, when settings match a predefined format
			gui.addChangeCommand ("header.state", "updateFromSettings ()");
			gui.addChangeCommand ("sep.string", "updateFromSettings ()");
			gui.addChangeCommand ("dec.string", "updateFromSettings ()");
			gui.addChangeCommand ("quote.string", "updateFromSettings ()");
			gui.addChangeCommand ("commentchar.text", "updateFromSettings ()");
			gui.addChangeCommand ("fill.state", "updateFromSettings ()");

			updateFromSettings = function () {
				if (updating) return;
				updating = true;

				if (settingsMatch (preset_csv)) gui.setValue ("quick.string", "csv");
				else if (settingsMatch (preset_csv2)) gui.setValue ("quick.string", "csv2");
				else if (settingsMatch (preset_tsv)) gui.setValue ("quick.string", "delim");
				else if (settingsMatch (preset_tsv2)) gui.setValue ("quick.string", "delim2");
				else if (settingsMatch (preset_table)) gui.setValue ("quick.string", "table");
				else gui.setValue ("quick.string", "custom");

				updating = false;
			}
			
			settingsMatch = function (preset) {
				if (gui.getValue ("header.state") != preset.header) return false;
				if (gui.getValue ("sep.string") != preset.sep) return false;
				if (gui.getValue ("dec.string") != preset.dec) return false;
				if (gui.getValue ("quote.string") != preset.quote) return false;
				if (gui.getValue ("commentchar.text") != preset.commentchar) return false;
				if (gui.getValue ("fill.state") != preset.fill) return false;
				return true;
			}

			updateFromPresets ();
		]]></script>
		  
		<external id="filename" />
		<connect governor="filename" client="file.selection"/>

		<convert id="customsep" mode="equals" sources="sep.string" standard="other" />
		<connect client="custom_sep.enabled" governor="customsep" />
		<convert id="customdec" mode="equals" sources="dec.string" standard="other" />
		<connect client="custom_dec.enabled" governor="customdec" />
		<convert id="customquote" mode="equals" sources="quote.string" standard="other" />
		<connect client="custom_quote.enabled" governor="customquote" />

		<convert id="userow" mode="equals" sources="rowname.string" standard="rowcol" />
		<convert id="customizerow" mode="equals" sources="rowname.string" standard="custoRow" />
		<connect client="nomrow.enabled" governor="userow" />
		<connect client="rownames.enabled" governor="customizerow" />

		<convert id="customizecol" mode="equals" sources="colname.string" standard="custoCol" />
		<connect client="colnames.enabled" governor="customizecol" />
		<convert id="customizeclasses" mode="equals" sources="colclass.string" standard="custoClass" />
		<connect client="custoClasses.enabled" governor="customizeclasses" />
	</logic>
	<dialog label="Import Text / CSV data" >
		<tabbook>
			<tab id="tab_general" label="General" >
				<browser id="file" type="file" label="File name" filter="*.csv *.tsv *.txt"/>
				<dropdown id="quick" label="Data format" >
					<option value="csv" label="Comma separated values (CSV)" checked="true" />
					<option value="csv2" label="Semicolon separated values, comma as decimal separator (CSV2)" />
					<option value="delim" label="Tab separated values (TAB)" />
					<option value="delim2" label="Tab separated values, comma as decimal separator (TAB2)" />
					<option value="table" label="read.table() default (whitespace separated values)" />
					<option value="custom" label="Custom"/>
				</dropdown>
				<frame>
					<checkbox id="header" value="TRUE" value_unchecked="FALSE" checked="false" label="Use first row as column names"/>
				</frame>
				<frame>
					<row>
						<column>
							<radio id="dec" label="Decimal point character" >
								<option value="'.'" label="'.' (Period)" />
								<option value="','" label="',' (Comma)" />
								<option value="other" label="Other (specify below)" />
							</radio>
							<stretch />
							<input id="custom_dec" label="Specify decimal point character" required="true"/>
						</column>
						<column>
							<radio id="sep" label="Field separator character" >
								<option value="'\t'" label="Tab" />
								<option value="';'" label="';' (Semicolon)" />
								<option value="','" label="',' (Comma)" />
								<option value="' '" label="Single space" />
								<option value="" label="Any whitespace" />
								<option id="sepOther" value="other" label="Other (specify below)" />
							</radio>
							<stretch />
							<input id="custom_sep" label="Specify field separator character" required="true"/>
						</column>
					</row>
				</frame>
				<frame>
					<saveobject id="name" initial="my.csv.data" label="Object to save to"/>
					<checkbox id="doedit" value="1" value_unchecked="0" label="Open imported data for editing" checked="true" />
				</frame>
				<preview id="preview" active="true" mode="data" label="Preview"/>
			</tab>
			<tab id="tab_rows" label="Rows and Columns" >
				<row>
					<column>
						<frame label="Row Specifications">
							<radio id="rowname" label="Row names" >
								<option value="auto" checked="true" label="Automatic" />
								<option value="number" label="Numeric row names" />
								<option value="rowcol" label="As specified in column x:" />
								<option value="custoRow" label="Use a vector" />
							</radio>
							<input size="small" id="nomrow" initial="1" label="Column number or variable name" required="true"/>
							<input id="rownames" label="Vector of row names (quoted)" required="true"/>
							<stretch/>
						</frame>
					</column>
					<column>
						<frame label="Column Specifications">
							<radio id="colname" label="Column names" >
								<option value="" label="Automatic" />
								<option value="custoCol" label="Use a character vector" />
							</radio>
							<input id="colnames" label="Vector of column names (quoted)" required="true"/>
							<checkbox value_unchecked="FALSE" checked="true" value="TRUE" id="checkname" label="Check syntax of column names" />
							<radio id="colclass" label="Classes of columns" >
								<option value="" label="Automatic" />
								<option value="custoClass" label="Use a character vector" />
							</radio>
							<input id="custoClasses" label="Vector of column classes (quoted)" required="true"/>
							<stretch/>
						</frame>
					</column>
				</row>
				<checkbox id="flush" label="Skip trailing fields" value=", flush=TRUE" value_unchecked="" />
				<checkbox id="fill" checked="false" value="TRUE" value_unchecked="FALSE" label="Pad rows if unequal length" />
				<stretch/>
			</tab>
			
			<tab id="tab_further_options" label="Further Options" >
				<frame label="String handling" id="frame_strings">
					<checkbox id="allow_escapes" label="Allow escaped characters" value=", allowEscapes=TRUE" value_unchecked="" />
					<checkbox value_unchecked="FALSE" checked="false" value="TRUE" id="stripwhite" label="Strip leading and trailing whitespace" />
					<row>
						<column>
							<radio id="strings_as_factors" label="Convert character columns to factors" >
								<option value=", stringsAsFactors=TRUE" label="Convert to factor" />
								<option value="" label="Default" checked="true" />
								<option value=", stringsAsFactors=FALSE" label="Do not convert" />
							</radio>
							<stretch/>
							<input size="small" initial="NA" id="na" label="Missing value string" />
						</column>
						<column>
							<radio id="quote" label="String delimiter" >
								<option value="'\&quot;'" label="&quot; only" />
								<option value="'\''" label="' only" />
								<option value="'&quot;\''" label="&quot; and '" checked="true"/>
								<option value="''" label="None / disabled" />
								<option value="other" label="Other (specify below)" />
							</radio>
							<input id="custom_quote" label="Specify quoting character(s)" required="true"/>
						</column>
					</row>
				</frame>
				<frame label="Skip" id="frame_skip">
					<input size="small" initial="0" id="skip" label="Skip x lines at the start of the file" />
					<input size="small" initial="-1" id="nrows" label="Max number of lines to read (-1 for no limit)" />
					<input size="small" initial="#" id="commentchar" label="Character for comments" />
					<checkbox value_unchecked="FALSE" checked="true" value="TRUE" id="blanklinesskip" label="Skip blank lines" />
				</frame>
			</tab>
		</tabbook>
	</dialog>
</document>
