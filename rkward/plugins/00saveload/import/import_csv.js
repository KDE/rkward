/* ------- This file generated by php2js from PHP code. --------
Please check this file by hand, and remove this notice, afterwards.
Messages:
Found string 'strtr'. Please check whether conversion is needed (use varname.replace(...)).
Warning: please check correctness of conversion of '=>' in arrays by hand
Warning: '$' inside '"'-delimited string. This might be a variable name. Please check by hand!
Warning: '$' inside '"'-delimited string. This might be a variable name. Please check by hand!
Warning: '$' inside '"'-delimited string. This might be a variable name. Please check by hand!
Warning: '$' inside '"'-delimited string. This might be a variable name. Please check by hand!
Warning: '$' inside '"'-delimited string. This might be a variable name. Please check by hand!
Warning: '$' inside '"'-delimited string. This might be a variable name. Please check by hand!
Warning: please check correctness of conversion of '=>' in arrays by hand
Warning: please check correctness of conversion of '=>' in arrays by hand
Note: Control statement without braces. This is bad style.
Note: Control statement without braces. This is bad style.
Note: Control statement without braces. This is bad style.
Note: Control statement without braces. This is bad style.
Note: Control statement without braces. This is bad style.
Note: Control statement without braces. This is bad style.

---------------------------- */

// globals
var undefined;

// internal helper function
function quoteString (string) {
	return ('"' + strtr (string, new Array('"', '\\"')) + '"');
}


function calculate () {
	var quick = "";
	var dec = "";
	var sep = "";
	var quote = "";
	var header = "";
	var fill = "";
	var comchar = "";
	var tableOptions = "";
	quick = getValue ("quick");
	if (quick == "table") {
		dec = getValue ("dec");
		if (dec == "other") dec = quoteString (getValue ("custom_dec"));
		sep = getValue ("sep");
		if (sep == "other") sep = quoteString (getValue ("custom_sep"));
		quote = getValue ("quote");
		if (quote == "other") quote = quoteString (getValue ("custom_quote"));
		header = getValue ("header");
		fill = getValue ("fill");
		comchar = quoteString (getValue ("commentchar"));
		tableOptions = ", header={$header}, sep={$sep}, quote={$quote}, dec={$dec}, fill={$fill}, comment.char={$comchar}";
	} else {
		tableOptions = "";
	}
// Other method is to use read.table and show all the options - more transparent
	echo ('imported <<- read.' + quick + ' (file="' + getValue("file") + '"' + tableOptions + ', '); // doing row names (what a pity...)
	if (getValue("rowname")!="NULL") {
		echo ("row.names = ");
		if (getValue("rowname")=="rowcol") echo (echo (getValue("nomrow")) + ",");
		else echo (getValue("rownames") + ",");
	}
	// doing col names (what a pity...)
	if (getValue("colname") == "custoCol") echo ( "col.names = " + getValue ("colnames") + ",");
	// doing col class (what a pity...)
	if (getValue("colclass") == "custoClass") echo( "colClasses = " + getValue ("custoClasses") + ",");
	//doing what is left
	echo (' na.strings = "' + getValue("na"))  echo ('", nrows = ' + getValue("nrows") + ', skip = ' + getValue("skip") + ', check.names = ' + getValue("checkname") + ', strip.white = ' + getValue("stripwhite") + ', blank.lines.skip = ' + getValue("blanklinesskip") + getValue("allow_escapes") + getValue("flush") + getValue("strings_as_factors") + ')\n');
	echo ('\n');
	echo ('# copy from the local environment to globalenv()\n');
	echo ('assign("' + getValue("name") + '", imported, envir=globalenv())\n');
	if (getValue ("doedit")) {
		echo ('\n');
		echo ('rk.edit (' + getValue ("name") + ')\n');
	}
}

function printout () {
	makeHeaderCode ("Import text / csv data", new Array("File" ,  getValue ("file"), "Import as" ,  getValue ("name")));
}

