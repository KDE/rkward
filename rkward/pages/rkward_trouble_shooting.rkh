<!DOCTYPE rkhelp>
<document>
	<title>Trouble Shooting</title>
	<summary>
	RKWard is far from complete and certainly there are many issues that need to be fixed. However, some of the things you notice are not due to the nature of RKWard but R or something else. This section will try to cover some common issues. See also <link href="http://p.sf.net/rkward/faq">the online FAQ</link>.
	</summary>
	<section title="People tend to ask me what RKWard means. What should I answer?" shorttitle="What does &quot;RKWard&quot; mean?" id="the_name_problems">
		Yes, it's a very odd name. ;) However, R comes obviously from the <link href="http://www.r-project.org/">R-language</link> which is the statistical basis of RKWard. K is derived from <link href="http://kde.org/">KDE</link> which delivered the basic GUI technologies for RKWard. And <link href="http://en.wikipedia.org/wiki/Ward">Ward</link>? That's another story.
	</section>
	<section title="Sometimes I enter a command short after the start of RKWard but it is not processed. What's wrong?" shorttitle="Commands not processing" id="not_yet_ready_problems">
		This happens because RKWard starts first and subsequent R is started in the background. Depending on the speed of your machine it can take some time to start R. In any case you can check the state of R within RKWard. Just look at the little box on the right bottom corner of RKWard. If it is green you can go ahead.

		You can start submitting commands while the backend has not yet started, or while another lengthy calculation is still taking place. In this case your commands will be placed into a queue, first, and executed as soon as the backend becomes available, again.
	</section>
	<section title="RKWard says it needs a package. Was the installation of RKWard not complete?" shorttitle="Missing packages" id="package_problems">
		RKWard has basically all the functionality which comes with the standard packages of R. But RKWard is at the same time rather extensible. Many developers made use of this and thus some of the procedures in RKWard depend on "external" packages (obtained from <link href="http://cran.r-project.org/">The Comprehensive R Archive Network (CRAN)</link>) to perform a task.

		Here is an example. All tests related to <link href="rkward://rhelp/moments">skewness</link> and <link href="rkward://rhelp/moments">kurtosis</link> (which you would certainly expect to be shipped as a base package of R) are performed from an external package. If you read this the first time or restarted RKWard after you installed it and try to follow the link you will be out of luck. First you need to run a test from Analysis->Moment in order to achieve this.

		Typically you would call them from R via <link href="rkward://rhelp/update.packages">update.packages</link> and <link href="rkward://rhelp/library">library</link> to achieve this. But RKWard simplifies this for you. You'll be guided through the install procedure for the required package. Please note you need root privileges in certain situations.
	</section>
	<section title="RKWard claimes to take care of seamless integration with an office-suite. Why is there no option to save it as an office file?" shorttitle="RKWard integration with an office-suite" id="integration_in_office_suite">
		We agree that RKWard is still very lacking when it comes to office integration, and "seamless" integration is still far away. Refer to <link href="rkward://page/rkward_output"/> for information on how to accomplish the most important things right now.
	</section>
	<section title="RKWard is running since ages. Has it hung up?" shorttitle="RKWard seems to hang" id="hung_up_problems">
		This depends. Some test and plots just need some time if you have huge amounts of data or sophisticated calculations. Therefore patience is sometimes needed. In any case you can check the state of R within RKWard. Just look at the little box on the right bottom corner of RKWard. Red means there is still something to calculate or plot. If it's green, R is done calculating.

		But some statistical test are rather memory and stack hungry and can make the entire system unresponsive, if there is a lot of swapping. This is not a bug in RKWard or R, just the calculation taking your system to its limits. An example of very memory hungry tests are the <link href="rkward://rhelp/wilcox.test">Wilcoxon Rank Sum and Signed Rank Tests</link>.

		Therefore it's important you know the test. Moreover it's very important to save the workspace and other sections you worked on before you do such operations. There is currently no recovery functionality within RKWard in case of a crash! You can find build-in tests from R to address this memory issue (see: <link href="rkward://rhelp/mem.limits" />, and <link href="rkward://rhelp/memory.limit" />).
	</section>
	<section title="I think I did something wrong? Where is 'Undo' and 'Redo'?" shorttitle="Undo/Redo" id="undo_redo_problems">
		Right now RKWard doesn't have "undo" or "redo" functionality in all places. For example there is such functionality for the script editor, but there is no undo or redo for finished plots or tests. Therefore it's important that you know what you do before you start. It's recommended to use copies of original data and to give everything a meaningful name.

		However, RKWard tries to give you as much information as possible about things you have done. For tests and plots that you run from the menu, the <link href="rkward://page/rkward_output"/> will contain a "run again" link below the output. You can use this to re-do this action with identical or slighly modified settings. Also, tests and plots try to show the most relevant settings in combination with the creation date. Moreover you can check and copy any code generated for your documentation purposes.
	</section>
</document>
