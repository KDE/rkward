% Generated by roxygen2 (4.0.2): do not edit by hand
\name{rk.JS.optionset}
\alias{rk.JS.optionset}
\title{Evaluate optionset objects in plugin JavaScript}
\usage{
rk.JS.optionset(optionset, ..., loopvar = "i", vars = FALSE,
  guess.getter = TRUE)
}
\arguments{
\item{optionset}{A XiMpLe.node object, the full \code{<optionset>} node.}

\item{...}{The JavaScript code,
      optionally including the optioncolumn objects. This will become
the body of the for loop.}

\item{loopvar}{Character, name of the index variable used in the for loop.}

\item{vars}{Logical,
      if \code{TRUE} all optioncolumn varaibles will be defined first. This is not
needed if \code{\link[rkwarddev:rk.JS.scan]{rk.JS.scan}} was already called.}

\item{guess.getter}{Logical,
      if \code{TRUE} try to get a good default getter function for JavaScript
variable values. Only relevant if \code{vars=TRUE}.}
}
\description{
This function scans an object generated by \code{\link[rkwarddev:rk.XML.optionset]{rk.XML.optionset}},
extract IDs of all optioncolumn objects and nest the JavaScript code you define via \code{...} inside
a for loop that iterates through all columns. Inside \code{...},
      you can use the column objects of
\code{\link[rkwarddev:rk.XML.optioncolumn]{rk.XML.optioncolumn}} to refer to the respective column,
\code{rk.JS.optionset} will use appropriate variables.
}
\seealso{
\code{\link[rkwarddev:rk.XML.optionset]{rk.XML.optionset}},
   \code{\link[rkwarddev:rk.XML.optioncolumn]{rk.XML.optioncolumn}}
}

