#!/usr/bin/make -f
# -*- makefile -*-
# Based on the sample debian/rules of dh_make

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

#we need to know the R version
RVERS = $(shell dpkg-query -W --showformat='$${Version}' r-base-core) 

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

config.status: configure
	dh_testdir
	# Add here commands to configure the package.
	CFLAGS="$(CFLAGS)" ./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info --disable-rpath --with-r-home=/usr/lib/R --with-r-libdir=/usr/lib/R/site-library/


build: build-stamp

build-stamp:  config.status
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	# remove any .svn subdir included by accident
	rm -rf $(CURDIR)/debian/.svn

	# Add here commands to clean up after the build process.
	-$(MAKE) distclean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/rkward.
	$(MAKE) install kde_htmldir=/usr/share/doc/kde/HTML DESTDIR=$(CURDIR)/debian/rkward
	# dirty hack to get rid of conflicting r.xml file without adjusting all makefiles
	rm -vf $(CURDIR)/debian/rkward/usr/share/apps/katepart/syntax/r.xml
	
	# remove unneeded R package files
	rm -vf $(CURDIR)/debian/rkward/usr/lib/R/site-library/R.css $(CURDIR)/debian/rkward/usr/lib/R/site-library/rkward/COPYING

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
	dh_installmenu
	dh_installman debian/rkward.1
	# Link manpage for rkward.bin to rkward
	ln -sf rkward.1.gz debian/rkward/usr/share/man/man1/rkward.bin.1.gz
	dh_link
	dh_strip
	# do not compress KDE HTML help
	dh_compress -Xusr/share/doc/kde/HTML
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	# unfortunately, the r-base-core dependency can not be found by dh_shlibdeps, so we need to get at the version manually
	@if [ "$(RVERS)" '>' "2.4.9" ] ; then \
		echo "rvers=r-base-core (>= 2.4.9)" >> $(CURDIR)/debian/rkward.substvars ; \
	else \
		if [ "$(RVERS)" '>' "2.3.9" ] ; then \
			echo "rvers=r-base-core (<= 2.4.9), r-base-core (>= 2.3.9)" >> $(CURDIR)/debian/rkward.substvars ; \
		else \
			if [ "$(RVERS)" '>' "2.2.1.svn37823" ] ; then \
				echo "rvers=r-base-core (<= 2.3.9), r-base-core (>= 2.3.0)" >> $(CURDIR)/debian/rkward.substvars ; \
			else \
				echo "rvers=r-base-core (<= 2.2.1-6), r-base-core (>= 2.1.0)" >> $(CURDIR)/debian/rkward.substvars ; \
			fi \
		fi \
	fi
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
