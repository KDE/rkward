# SPDX-FileCopyrightText: None
# SPDX-License-Identifier: CC0-1.0

include:
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/reuse-lint.yml
      - /gitlab-templates/cppcheck.yml
      - /gitlab-templates/linux-qt6.yml
      - /gitlab-templates/freebsd-qt6.yml
      - /gitlab-templates/windows-qt6.yml
      - /gitlab-templates/craft-appimage-qt6.yml
      - /gitlab-templates/craft-windows-x86-64-qt6.yml
      - /gitlab-templates/craft-macos-arm64-qt6.yml
      - /gitlab-templates/craft-macos-x86-64-qt6.yml
#      - /gitlab-templates/flatpak.yml // just a waste of CPU power in the current state

# NOTE: This is meant to modify the default linux-qt6.yml-job, and currently it does. It will need to be updated once the underlying name changes, though
suse_tumbleweed_qt610:
  script:
    - git config --global --add safe.directory $CI_PROJECT_DIR
    # no dlopen() loading, to get at better symbol information for the backend process from ASAN
    - python3 -u ci-utilities/run-ci-build.py --project $CI_PROJECT_NAME --branch $CI_COMMIT_REF_NAME --platform Linux/Qt6/Shared --extra-cmake-args=-DDLOPEN_RLIB=0

clang_format:
  stage: build
  image: debian:stable
  tags:
    - Linux
  only:
    - merge_requests
    - master
  before_script:
    - apt-get update
    - apt-get install --yes --no-install-recommends git clang-format-19
  script:
    - find rkward \( -name "*.cpp" -or -name "*.h"  -or -name "*.js" \) -exec clang-format-19 -i {} \;
    - git diff --exit-code

# setup mix-and-matched from okular, removing some extras
# combined check for building on "old" distribution (old distro should ideally be the previous ubuntu LTS, but that does not have kf6, yet)
# debian:stable has the advantage of being cached, and will likely remain stable for some time to come
build_clazy_stable:
  stage: build
  image: debian:stable
  tags:
    - Linux
  only:
    - merge_requests
  variables:
    #CLAZY_CHECKS: level0,level1,level2,no-ctor-missing-parent-argument,isempty-vs-count,qhash-with-char-pointer-key,raw-environment-function,qproperty-type-mismatch
    #CXXFLAGS: -Werror -Wno-deprecated-declarations > rather using check_warnings, below
    CC: clang
    CXX: clazy
  before_script:
    - apt-get update
    - apt-get install --yes eatmydata
    - eatmydata apt-get install --yes --no-install-recommends clazy clang
    # rkward build deps:
    - eatmydata apt-get install --yes --no-install-recommends cmake extra-cmake-modules qt6-webengine-dev libkf6notifications-dev gettext libkf6coreaddons-dev libkf6crash-dev libkf6guiaddons-dev libkf6i18n-dev libkf6iconthemes-dev libkf6breezeicons-dev libkf6texteditor-dev libkf6textwidgets-dev libkf6windowsystem-dev libkf6xmlgui-dev r-base-dev
  script:
    - export LC_ALL=C.UTF-8
    - mkdir -p build && cd build
    - cmake ..
    - make -j 9 kdsingleapplication # build first, to ignore all (not just clazy) warnings, in 3rdparty code
    - CLAZY_IGNORE_DIRS="3rdparty" make -j 9 > >(tee make.output) 2> >(tee make.error)
  artifacts:
    paths:
      - build/make.output
      - build/make.error
    expire_in: 1 week

# check the above build for warning messages (https://stackoverflow.com/questions/59680450/how-to-detect-compiler-warnings-in-gitlab-ci)
check_warnings:
  stage: test
  image: debian:stable
  script:
    - "if [[ $(cat build/make.error | grep warning -i) ]]; then cat build/make.error; exit 1; fi"
  allow_failure: true
