# SPDX-FileCopyrightText: None
# SPDX-License-Identifier: CC0-1.0

include:
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/reuse-lint.yml
      - /gitlab-templates/cppcheck.yml
      - /gitlab-templates/linux-qt6.yml
      - /gitlab-templates/freebsd-qt6.yml
      - /gitlab-templates/windows-qt6.yml
      - /gitlab-templates/craft-appimage-qt6.yml
      - /gitlab-templates/craft-windows-x86-64-qt6.yml
      - /gitlab-templates/craft-macos-arm64-qt6.yml
      - /gitlab-templates/craft-macos-x86-64-qt6.yml
#      - /gitlab-templates/flatpak.yml // just a waste of CPU power in the current state

# experimental: delay running the deployment job(s) to be more resource friendly
#               jobs can still be triggered, manually
craft_windows_qt6_x86_64:
  rules:
    # run the job on mainline branches of mainline repositories
    - if: $KDECI_SECURE_SERVICES_KEY
      when: delayed
      start_in: 4 hours
    # or when triggered manually
    - when: manual
      # we don't want the manual job to block the pipeline
      allow_failure: true

craft_appimage_qt6_x86_64:
  rules:
    # run the job on mainline branches of mainline repositories
    - if: $KDECI_SECURE_SERVICES_KEY
      when: delayed
      start_in: 4 hours
    # or when triggered manually
    - when: manual
      # we don't want the manual job to block the pipeline
      allow_failure: true

craft_macos_qt6_arm64:
  rules:
    # run the job on mainline branches of mainline repositories
    - if: $KDECI_SECURE_SERVICES_KEY
      when: delayed
      start_in: 4 hours
    # or when triggered manually
    - when: manual
      # we don't want the manual job to block the pipeline
      allow_failure: true

craft_macos_qt6_x86_64:
  rules:
    # run the job on mainline branches of mainline repositories
    - if: $KDECI_SECURE_SERVICES_KEY
      when: delayed
      start_in: 4 hours
    # or when triggered manually
    - when: manual
      # we don't want the manual job to block the pipeline
      allow_failure: true
