#!/usr/bin/env bash
INSTDIR=$(echo "$2/opt/rkward" | sed 's#//#/#g')
INSTALLER_USER=$(stat -f '%Su' "${HOME}")
AGENT="org.macports.kf5-rkward"
RKWARDSHARE="${INSTDIR}/share/rkward"
SCRIPTDIR="${RKWARDSHARE}/macOS"
PLISTSOURCE="${SCRIPTDIR}/${AGENT}.plist"
AGENTSDIR="${HOME}/Library/LaunchAgents"
PLISTTARGET="${AGENTSDIR}/${AGENT}.plist"
UNINSTALLER="${SCRIPTDIR}/uninstall.scpt"

"${INSTDIR}/bin/update-mime-database" -V "${INSTDIR}/share/mime"

if [ -d "${RKWARDSHARE}" ] ; then
  mkdir -p "${SCRIPTDIR}"
  # generate uninstall script
    cat <<EOF > "${UNINSTALLER}"
set RKWardDir to "${INSTDIR}"
set appInTrash to POSIX path of (path to trash) & "rkward.app/Contents/Info.plist"
set haveRKWard to false
set haveTrash to false
tell application "System Events"
  if exists file appInTrash then
    set haveTrash to true
  end if
  if exists folder RKWardDir then
    set haveRKWard to true
  end if
end tell
if haveTrash and haveRKWard then
  try
    display dialog "Most of RKWard's installation resides in " & RKWardDir & ". To completely uninstall RKWard, that directory should be deleted as well.\n\nIf you choose this option, all files below " & RKWardDir & " will not be moved to Trash but removed permanently!\n\nDo you want to remove " & RKWardDir & " now?" buttons {"No, keep for now", "Yes, completely remove"} default button "Yes, completely remove" cancel button "No, keep for now" with title "Remove RKWard completely?" with icon caution
    set {buttonReturned} to {button returned of result}
    if buttonReturned is "Yes, completely remove" then
      try
        do shell script "rm -rf \"" & RKWardDir & "\"" with administrator privileges
        set removeRKWardOK to true
      on error
        set removeRKWardOK to false
        display alert "Failed removing " & RKWardDir & "!"
      end try
      if removeRKWardOK then
        try
          do shell script "rm \"${PLISTTARGET}\""
          do shell script "launchctl remove \"${AGENT}\""
        end try
      end if
    end if
  end try
end if
EOF
  # generate watch job
  cat <<EOF > "${PLISTSOURCE}"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>Label</key>
    <string>${AGENT}</string>
    <key>WatchPaths</key>
    <array>
      <string>~/.Trash/rkward.app</string>
    </array>
    <key>ProgramArguments</key>
    <array>
      <string>osascript</string>
      <string>${UNINSTALLER}</string>
    </array>
    <key>KeepAlive</key>
    <false/>
  </dict>
</plist>
EOF
  # link watch job
  if [ -f "${PLISTSOURCE}" ] ; then
    if ! [ -d "${AGENTSDIR}" ] ; then
      sudo -u "${INSTALLER_USER}" mkdir -p "${AGENTSDIR}"
    fi
    if ! [ -f "${PLISTTARGET}" ] ; then
      sudo -u "${INSTALLER_USER}" ln -s "${PLISTSOURCE}" "${PLISTTARGET}"
    fi
    if ! [ $(launchctl list | grep ${AGENT}) ] ; then
      sudo -u "${INSTALLER_USER}" launchctl load -w "${PLISTTARGET}"
    fi
  fi
fi
exit 0
